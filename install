#!/bin/bash

export INSTALL_DIR=${HOME}
. colori.conf

function usage
{
  echo -e ""
  echo -e "    ${0}"
  echo -e ""

  exit 999
}

function esciMale
{
  # $1 Codice di exit
  # $2 Messaggio di exit
  # $3 Messaggio di errore d'origine
  
  echo -e "#  - ${FGRossoChiaro}Fail${FGReset}: ${2}"
  
  if [[ -n "${3}" ]]; then
    echo -e "#"
    echo ${3} | while read ERR
    do
      echo -e "#    ${FGRossoChiaro}* ${ERR}${FGReset}"
    done
  fi
  
  echo -e "#"
  echo -e "#  - Exit Code ${FGRossoChiaro}${1}${FGReset}"
  echo -e "#"
  echo -e "########################################################################"
    
  exit ${1}
}


function go
{
  if [[ -d ${INSTALL_DIR} ]]; then

    # Estraggo l'archivio
    cd ${INSTALL_DIR} && unzip -oq /tmp/jms_queue_report-main.zip
    
    if [[ $? -ne 0 ]]; then
      echo -e ""
      echo -e "#"
      esciMale 888 "Impossibile estrarre l'archivio nella ${FGGiallo}\${HOME}${FGReset}.\n#          Verificare i permessi su file e directory."
    else
	
  	  # (Ri)faccio il link simbolico nella ${HOME}
      rm -f  ${HOME}/jms_queue_report
      ln -fs ${INSTALL_DIR}jms_queue_report-main/ ${HOME}/jms_queue_report
      
      # Mi porto nella dir d'installazione e concedo i permessi di esecuzione dove serve
      cd ${HOME}/jms_queue_report
      chmod +x jqr
      chmod +x update
      chmod +x bin/csv2html
      
      # Popolo il .jqr dinamicamente... cosi se alcuni/tutti i valori sono giÃ  stati customizzati non vengono sovrascritti
      touch .jqr
      grep -q "^CUSTOM_MAILX=\"" .jqr 2>/dev/null || echo '#export CUSTOM_MAILX="/custom/dir/bin/mailx"' >> .jqr
      
      # Aggiorno il .profile/.bash_profile
      grep -q "^PATH.*jms_queue_report.*" ${HOME}/.bash_profile || sed -i '/^PATH/ s/$/:\${HOME}\/jms_queue_report/' ${HOME}/.bash_profile
      grep -q "^PATH.*jms_queue_report.*" ${HOME}/.profile      || sed -i '/^PATH/ s/$/:\${HOME}\/jms_queue_report/' ${HOME}/.profile
      
    fi

  else  
    echo -e "#"
    esciMale 888 "Impossibile estrarre l'archivio nella ${FGGiallo}\${INSTALL_DIR}${FGReset}.\n#          Verificare i permessi su file e directory."
    
  fi
   
  echo -e "#"
  echo -e "#  - Installazione terminata, vai alla directory d'installazione:"
  echo -e "# "
  echo -e "#      cd ${FGMarrone}${HOME%/}/${FGVerdeChiaro}jms_queue_report${FGReset}/"
  echo -e "# "
  echo -e "#  - Per ulteriori info fai riferimentoalla guida su GitHub:"
  echo -e "# "
  echo -e "#      ${FGiallo}https://github.com/${FGMarrone}mapuricelli${FGReset}/${FGGiallo}jms_queue_report#configurazione${FGReset}"
  echo -e "#"
  echo -e "########################################################################"
  
}

function cleanObsolete
{
    # Cancello i file obsoleti e inutili!

    cd ${HOME}/jms_queue_report
    find . -name .gitignore -exec rm -f {} \;
    rm -f install
    rm -f install.sh
    rm -f inst-update.sh
    rm -f update.sh
    rm -f start.sh
    rm -f bin/csv2html.sh
    rm -f bin/uuencode
}

function chiediInstallDir
{
  echo -e  "#"
  echo -e  "#    In quale directory (${FGMarrone}\${INSTALL_DIR}${FGReset}) vuoi installare JMS Queue Report?"
  echo -e  "#"
  echo -e  "#    (Default home directory: ${FGMarrone}$(echo ${HOME} | sed -e 's/$/\//')${FGReset})"
  echo -e  "#"
  echo -en "#    > "
  
  while read TMP_INSTALL_DIR
  do
  
    if [[ "${TMP_INSTALL_DIR}" == "" ]]; then
      TMP_INSTALL_DIR=${INSTALL_DIR}
    fi
  
    if [[ -d "${TMP_INSTALL_DIR}" ]]; then
      INSTALL_DIR=${TMP_INSTALL_DIR}
      break;
    
    else
      mkdir ${TMP_INSTALL_DIR} && INSTALL_DIR=${TMP_INSTALL_DIR}  || esciMale 485 "Impossibile creare la directory:\n\n#          * ${FGRossoChiaro}${INSTALL_DIR}${FGReset}\n"
      break;
    fi
    
  done
  
  INSTALL_DIR="${INSTALL_DIR%/}/"
}

echo -e
echo -e "########################################################################"
echo -e "########################## ${FGAzzurroChiaro}JMS Queue Report${FGReset} ############################"
echo -e "####################### ${FGGiallo}Aggiornamento Software${FGReset} #########################"
echo -e "########################################################################"
echo -e "#"

chiediInstallDir && go && cleanObsolete
echo